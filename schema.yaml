openapi: 3.0.3
info:
  title: Cadastro de produtos e s API
  version: 1.0.0
  description: API feita para catálogo de produtos e s. O usuário, quando
    autenticado, tem acesso ao catálogo de produtos e pode cadastrar, atualizar, deletar
    e listar os produtos e suas s. O usuário também tem a possibilidade de
    buscar produtos e s por id e filtrar a busca de produtos por s
    específicas.
paths:
  /api/s/:
    get:
      operationId: api_s_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      tags:
        - api
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCategoryList"
          description: ""
    post:
      operationId: api_s_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Category"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
  /api/produtos/:
    get:
      operationId: api_produtos_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      tags:
        - api
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedProductList"
          description: ""
    post:
      operationId: api_produtos_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Product"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: ""
  /api/produtos/{id}/:
    get:
      operationId: api_produtos_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this produto.
          required: true
      tags:
        - api
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: ""
    put:
      operationId: api_produtos_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this produto.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Product"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Product"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: ""
    patch:
      operationId: api_produtos_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this produto.
          required: true
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedProduct"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedProduct"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedProduct"
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: ""
    delete:
      operationId: api_produtos_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this produto.
          required: true
      tags:
        - api
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/users/:
    post:
      operationId: api_users_create
      tags:
        - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Account"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Account"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: ""
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
        - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AuthToken"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AuthToken"
          application/json:
            schema:
              $ref: "#/components/schemas/AuthToken"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
          description: ""
  /api/users/logout/:
    post:
      operationId: api_users_logout_create
      tags:
        - api
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/AuthToken"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/AuthToken"
          application/json:
            schema:
              $ref: "#/components/schemas/AuthToken"
        required: true
      security:
        - basicAuth: []
        - cookieAuth: []
        - tokenAuth: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthToken"
          description: ""
components:
  schemas:
    Account:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 225
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
        - email
        - id
        - nome
        - password
        - username
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
        - password
        - token
        - username
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 225
        produtos:
          type: array
          items:
            $ref: "#/components/schemas/Nested"
          readOnly: true
      required:
        - id
        - nome
        - produtos
    CategoryInProducts:
      type: object
      properties:
        nome:
          type: string
          maxLength: 225
      required:
        - nome
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 225
        descricao:
          type: string
        preco:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        data_cadastro:
          type: string
          format: date
          readOnly: true
        data_atualizacao:
          type: string
          format: date
          readOnly: true
      required:
        - data_atualizacao
        - data_cadastro
        - descricao
        - id
        - nome
        - preco
    PaginatedCategoryList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Category"
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    PatchedProduct:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 225
        descricao:
          type: string
        preco:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        s:
          type: array
          items:
            $ref: "#/components/schemas/CategoryInProducts"
        data_cadastro:
          type: string
          format: date
          readOnly: true
        data_atualizacao:
          type: string
          format: date
          readOnly: true
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nome:
          type: string
          maxLength: 225
        descricao:
          type: string
        preco:
          type: string
          format: decimal
          pattern: ^-?\d{0,6}(?:\.\d{0,2})?$
        s:
          type: array
          items:
            $ref: "#/components/schemas/CategoryInProducts"
        data_cadastro:
          type: string
          format: date
          readOnly: true
        data_atualizacao:
          type: string
          format: date
          readOnly: true
      required:
        - s
        - data_atualizacao
        - data_cadastro
        - descricao
        - id
        - nome
        - preco
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
